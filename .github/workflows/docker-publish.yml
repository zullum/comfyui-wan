name: Build and Push Docker Images to Docker Hub

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  DOCKERHUB_REPO: szulic
  DOCKERHUB_IMG: comfyui-wan

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        variant: [wan]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/local/lib/node_modules
        sudo docker system prune -af --volumes
        sudo apt-get clean
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMG }}
        tags: |
          type=ref,event=branch,suffix=-${{ matrix.variant }}
          type=ref,event=pr,suffix=-${{ matrix.variant }}
          type=semver,pattern={{version}},suffix=-${{ matrix.variant }}
          type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.variant }}
          type=semver,pattern={{major}},suffix=-${{ matrix.variant }}
          type=raw,value=latest,suffix=-${{ matrix.variant }},enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: final
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          MODEL_TYPE=wan
          HUGGINGFACE_ACCESS_TOKEN=${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Check image size
      if: github.event_name != 'pull_request'
      run: |
        echo "Checking final image size..."
        docker images szulic/comfyui-wan:latest-wan --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

    - name: Clean up after build
      if: always()
      run: |
        docker system prune -af
        df -h